# Generated by Django 5.2 on 2025-10-15 07:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=100, null=True, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SportVenueType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название типа')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True)),
                ('is_indoor', models.BooleanField(default=False, verbose_name='Закрытое помещение')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Тип площадки',
                'verbose_name_plural': 'Типы площадок',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SportVenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('price_per_hour', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена за час')),
                ('address', models.CharField(default='Адрес не указан', max_length=200, verbose_name='Адрес')),
                ('open_time', models.TimeField(default='08:00', verbose_name='Время открытия')),
                ('close_time', models.TimeField(default='23:00', verbose_name='Время закрытия')),
                ('has_lights', models.BooleanField(default=False, verbose_name='Освещение')),
                ('has_lockers', models.BooleanField(default=False, verbose_name='Раздевалки')),
                ('has_showers', models.BooleanField(default=False, verbose_name='Душевые')),
                ('has_restrooms', models.BooleanField(default=False, verbose_name='Туалеты')),
                ('has_walls', models.BooleanField(default=False, verbose_name='Ограждение/стены')),
                ('has_parking', models.BooleanField(default=False, verbose_name='Парковка')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Широта')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Долгота')),
                ('yandex_map_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='Ссылка на Яндекс Карты')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sport_venues', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sport_venues', to='playgrounds.region', verbose_name='Регион')),
                ('sport_venue_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sport_venues', to='playgrounds.sportvenuetype', verbose_name='Тип площадки')),
            ],
            options={
                'verbose_name': 'Спортивная площадка',
                'verbose_name_plural': 'Спортивные площадки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SportVenueImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='sport_venue_images/', verbose_name='Фотография')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sport_venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='playgrounds.sportvenue')),
            ],
            options={
                'verbose_name': 'Фотография площадки',
                'verbose_name_plural': 'Фотографии площадок',
            },
        ),
        migrations.CreateModel(
            name='FavoriteSportVenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_sport_venues', to=settings.AUTH_USER_MODEL)),
                ('sport_venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='playgrounds.sportvenue')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'sport_venue')},
            },
        ),
    ]
